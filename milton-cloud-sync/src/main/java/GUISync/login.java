/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUISync;

import io.milton.sync.SpliffySync;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import static java.awt.image.ImageObserver.PROPERTIES;
import java.util.LinkedList;
import java.util.List;
import java.util.prefs.Preferences;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;

/**
 *
 * @author ibraheem
 */
public class login extends javax.swing.JFrame {

    private boolean isLoading = false;
    private final Preferences prefs;
    private login connect = this;
    String username, host, password;
    final static List<SpliffySync> listSync = new LinkedList<>();

    /**
     * Creates new form Login
     */
    //http://ibraheem.admin.kademi.us/repositories/testrepo/version1/
    public login() {
        initComponents();
        this.prefs = Preferences.userRoot().node("db");
        username = this.prefs.get("username", "");
        host = this.prefs.get("host", "");
        password = this.prefs.get("password", "");

        setIconImage(new BufferedImage(1, 1, BufferedImage.TYPE_INT_ARGB_PRE));

        setLocationRelativeTo(null);
        setAlwaysOnTop(true);

        setDefulteFields();
    }

    public static void clearLoginFields() {

        et_host.setText("");
        et_userid.setText("");
        et_password.setText("");
    }

    public void setDefulteFields() {

        et_host.setText(host);
        et_userid.setText(username);
        et_password.setText(password);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JPanel jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        et_host = new javax.swing.JTextField();
        et_password = new javax.swing.JPasswordField();
        jLabel7 = new javax.swing.JLabel();
        et_userid = new javax.swing.JTextField();
        progress = new javax.swing.JProgressBar();
        Exit = new javax.swing.JButton();
        LoginButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel5.setFont(new java.awt.Font("Ubuntu Light", 1, 12)); // NOI18N
        jLabel5.setText("user");

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setFont(new java.awt.Font("Ubuntu Light", 1, 12)); // NOI18N
        jLabel6.setText("host ");

        et_host.setToolTipText("http://example.admin.kademi.us/");
        et_host.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                et_hostActionPerformed(evt);
            }
        });

        et_password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                et_passwordActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Ubuntu Light", 1, 12)); // NOI18N
        jLabel7.setText("password");

        et_userid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                et_useridActionPerformed(evt);
            }
        });

        progress.setBackground(new java.awt.Color(204, 204, 255));
        progress.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        progress.setForeground(new java.awt.Color(255, 51, 0));
        progress.setStringPainted(true);

        Exit.setText("Cancel");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });

        LoginButton.setText("Connect");
        LoginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(0, 0, 0)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jLabel5)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(et_userid, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 279, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jLabel6)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(et_host, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 279, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jLabel7)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(jPanel1Layout.createSequentialGroup()
                                        .add(LoginButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(Exit, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(et_password, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 279, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                        .add(14, 14, 14))
                    .add(progress, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 415, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .add(100, 100, 100)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel6)
                    .add(et_host, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(20, 20, 20)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5)
                    .add(et_userid, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(5, 5, 5)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel7)
                    .add(et_password, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(LoginButton)
                    .add(Exit))
                .add(20, 20, 20)
                .add(progress, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        this.dispose();
    }//GEN-LAST:event_ExitActionPerformed
    boolean isdone = false;

    String json;

    private void LoginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginButtonActionPerformed

        SwingWorker worker = new SwingWorker<Void, Integer>() {
            @Override
            protected synchronized Void doInBackground() throws Exception {
                System.out.println("df");
                /*
                 * Here Thread sleeping used fot the testing purposes only
                 */
                publish(3);
                publish(5);
                publish(10);

                try {

                    String sRemoteAddress = et_host.getText();
                    String query_repo = sRemoteAddress + "/repositories/_DAV/PROPFIND?fields=name";
                    String user = et_userid.getText();
                    String pwd = et_password.getText();

                    if (Helper.checkInternet()) {
                        json = Helper.readUrl(query_repo, user, pwd);
                        isdone = true;
                    } else {
                        isdone = false;
                    }

                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Exception running monitor: " + ex.getMessage());
                    progress.setValue(0);

                    return null;
                }

                publish(30);

                publish(40);
                Thread.sleep(500);
                publish(50);
                Thread.sleep(500);
                publish(70);
                Thread.sleep(500);
                publish(85);
                Thread.sleep(500);
                publish(100);

                return null;
            }

            @Override
            protected void process(List< Integer> in) {
                progress.setValue(in.get(0));
            }

            @Override
            protected void done() {
                if (isdone == true) {

                    prefs.put("host", et_host.getText());
                    prefs.put("username", et_userid.getText());
                    prefs.put("password", et_password.getText());
                    connect.dispose();
                    new Repositories(json).setVisible(true);
                    setProgress(PROPERTIES);

                } else {
                    this.setProgress(0);
                }
            }
        };

        if (checkFields()) {
            worker.execute();
        }
    }//GEN-LAST:event_LoginButtonActionPerformed
    boolean checkFields() {
        return !et_host.getText().trim().isEmpty()
                && !et_userid.getText().trim().isEmpty() && !et_password.getText().trim().isEmpty();
    }
    private void et_hostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_et_hostActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_et_hostActionPerformed

    private void et_passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_et_passwordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_et_passwordActionPerformed

    private void et_useridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_et_useridActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_et_useridActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Exit;
    private javax.swing.JButton LoginButton;
    private static javax.swing.JTextField et_host;
    private static javax.swing.JPasswordField et_password;
    private static javax.swing.JTextField et_userid;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    protected javax.swing.JProgressBar progress;
    // End of variables declaration//GEN-END:variables

    private static void protect() {
        try {
            javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
            //will set the JProgressbar's orange color to new color
            /*   UIManager.put("ProgressBar.background", Color.orange);
            UIManager.put("ProgressBar.foreground", Color.blue);
            UIManager.put("ProgressBar.selectionBackground", Color.red);
            UIManager.put("ProgressBar.selectionForeground", Color.green);*/
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            ex.printStackTrace();
        }

    }

    public static void main(String s[]) {
        protect();
        login l = new login();
        l.setVisible(true);
    }

}
